swagger: '2.0'
info:
  title: DagAir Admin Node v1
  version: v1
paths:
  /admin-node/addresses:
    post:
      tags:
        - AddressesAdmin
      consumes:
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AddNewAddressCommand'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/AddressDtoJsonApiDocument'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/JsonApiError'
  /admin-node/affiliates:
    get:
      tags:
        - AffiliatesAdmin
      summary: Returns information about all affiliates
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AdminNodeAffiliateDtoListJsonApiDocument'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/JsonApiError'
    post:
      tags:
        - AffiliatesAdmin
      consumes:
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AddNewAffiliateCommand'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/AffiliateDtoJsonApiDocument'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/JsonApiError'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/JsonApiError'
  '/admin-node/affiliates/{affiliateId}':
    get:
      tags:
        - AffiliatesAdmin
      summary: Returns information about an affiliate with a given affiliateId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: affiliateId
          description: ''
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AdminNodeAffiliateDtoJsonApiDocument'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/JsonApiError'
    delete:
      tags:
        - AffiliatesAdmin
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: affiliateId
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/JsonApiError'
  /admin-node/organizations:
    get:
      tags:
        - FacilitiesAdmin
      summary: Returns information about all organizations
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AdminNodeOrganizationDtoListJsonApiDocument'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/JsonApiError'
    post:
      tags:
        - FacilitiesAdmin
      consumes:
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AddNewOrganizationCommand'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/OrganizationDtoJsonApiDocument'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/JsonApiError'
  '/admin-node/organizations/{organizationId}':
    get:
      tags:
        - FacilitiesAdmin
      summary: Returns information about an organization with a given organizationId
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: organizationId
          description: ''
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AdminNodeOrganizationDtoJsonApiDocument'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/JsonApiError'
    delete:
      tags:
        - FacilitiesAdmin
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: organizationId
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/JsonApiError'
  /admin-node/rooms/get-room:
    post:
      tags:
        - RoomsAdmin
      consumes:
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetRoomCommand'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AdminNodeRoomDtoJsonApiDocument'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/JsonApiError'
  /admin-node/rooms:
    post:
      tags:
        - RoomsAdmin
      consumes:
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AddNewRoomCommand'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/RoomDtoJsonApiDocument'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/JsonApiError'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/JsonApiError'
  '/admin-node/rooms/{roomId}':
    delete:
      tags:
        - RoomsAdmin
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: roomId
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/JsonApiError'
  /admin-node/rooms/historic-measurements:
    post:
      tags:
        - SensorStateHistoryAdmin
      consumes:
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetRoomCommand'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PastMeasurementsDtoJsonApiDocument'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/JsonApiError'
definitions:
  AddNewAddressCommand:
    type: object
    properties:
      addressDto:
        $ref: '#/definitions/AddressDto'
      cityDto:
        $ref: '#/definitions/CityDto'
      countryDto:
        $ref: '#/definitions/CountryDto'
      postalCodeDto:
        $ref: '#/definitions/PostalCodeDto'
  AddNewAffiliateCommand:
    type: object
    properties:
      affiliateDto:
        $ref: '#/definitions/AffiliateDto'
  AddNewOrganizationCommand:
    type: object
    properties:
      organizationDto:
        $ref: '#/definitions/OrganizationDto'
  AddNewRoomCommand:
    type: object
    properties:
      roomDto:
        $ref: '#/definitions/RoomDto'
  AddressDto:
    type: object
    properties:
      id:
        format: int64
        type: integer
      countryId:
        format: int64
        type: integer
      cityId:
        format: int64
        type: integer
      postalCodeId:
        format: int64
        type: integer
      country:
        $ref: '#/definitions/CountryDto'
      city:
        $ref: '#/definitions/CityDto'
      postalCode:
        $ref: '#/definitions/PostalCodeDto'
  AddressDtoJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        $ref: '#/definitions/AddressDto'
  AdminNodeAffiliateDto:
    type: object
    properties:
      affiliateDto:
        $ref: '#/definitions/AffiliateDto'
      addressDto:
        $ref: '#/definitions/AddressDto'
  AdminNodeAffiliateDtoJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        $ref: '#/definitions/AdminNodeAffiliateDto'
  AdminNodeAffiliateDtoListJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/AdminNodeAffiliateDto'
  AdminNodeOrganizationDto:
    type: object
    properties:
      organizationDto:
        $ref: '#/definitions/OrganizationDto'
      addressDto:
        $ref: '#/definitions/AddressDto'
  AdminNodeOrganizationDtoJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        $ref: '#/definitions/AdminNodeOrganizationDto'
  AdminNodeOrganizationDtoListJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/AdminNodeOrganizationDto'
  AdminNodeRoomDto:
    type: object
    properties:
      roomDto:
        $ref: '#/definitions/RoomDto'
      pastMeasurements:
        $ref: '#/definitions/PastMeasurementsDto'
  AdminNodeRoomDtoJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        $ref: '#/definitions/AdminNodeRoomDto'
  AffiliateDto:
    required:
      - name
    type: object
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      addressId:
        format: int64
        type: integer
      organizationId:
        format: int64
        type: integer
      organization:
        $ref: '#/definitions/OrganizationDto'
      rooms:
        type: array
        items:
          $ref: '#/definitions/RoomDto'
  AffiliateDtoJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        $ref: '#/definitions/AffiliateDto'
  CityDto:
    required:
      - name
    type: object
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      addresses:
        type: array
        items:
          $ref: '#/definitions/AddressDto'
  CountryDto:
    required:
      - name
    type: object
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      addresses:
        type: array
        items:
          $ref: '#/definitions/AddressDto'
  ExpectedRoomConditionsDto:
    type: object
    properties:
      id:
        format: int64
        type: integer
      temperature:
        format: double
        type: number
      illuminance:
        format: int32
        type: integer
      humidity:
        format: double
        type: number
      temperatureMargin:
        format: double
        type: number
      illuminanceMargin:
        format: double
        type: number
      humidityMargin:
        format: double
        type: number
      roomPolicyId:
        format: int64
        type: integer
  GetRoomCommand:
    type: object
    properties:
      roomId:
        format: int64
        type: integer
      numberOfRecords:
        format: int32
        type: integer
  HistoricMeasurement:
    type: object
    properties:
      temperature:
        format: double
        type: number
      illuminance:
        format: int32
        type: integer
      humidity:
        format: double
        type: number
      date:
        format: date-time
        type: string
  HistoricMeasurementRoomPolicyDtoTuple:
    type: object
    properties:
      item1:
        $ref: '#/definitions/HistoricMeasurement'
      item2:
        $ref: '#/definitions/RoomPolicyDto'
  JsonApiError:
    type: object
    properties:
      message:
        type: string
        readOnly: true
      messageDetails:
        type: string
  OrganizationDto:
    required:
      - name
    type: object
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      addressId:
        format: int64
        type: integer
      affiliates:
        type: array
        items:
          $ref: '#/definitions/AffiliateDto'
  OrganizationDtoJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        $ref: '#/definitions/OrganizationDto'
  PastMeasurementsDto:
    type: object
    properties:
      measurements:
        type: array
        items:
          $ref: '#/definitions/HistoricMeasurementRoomPolicyDtoTuple'
  PastMeasurementsDtoJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        $ref: '#/definitions/PastMeasurementsDto'
  PostalCodeDto:
    required:
      - number
    type: object
    properties:
      id:
        format: int64
        type: integer
      number:
        type: string
      addresses:
        type: array
        items:
          $ref: '#/definitions/AddressDto'
  RoomDto:
    type: object
    properties:
      id:
        format: int64
        type: integer
      number:
        type: string
      floor:
        format: int32
        type: integer
      affiliateId:
        format: int64
        type: integer
      affiliate:
        $ref: '#/definitions/AffiliateDto'
  RoomDtoJsonApiDocument:
    required:
      - data
    type: object
    properties:
      data:
        $ref: '#/definitions/RoomDto'
  RoomPolicyCategoryDto:
    type: object
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
      categoryNumber:
        format: int32
        type: integer
  RoomPolicyDto:
    type: object
    properties:
      id:
        format: int64
        type: integer
      startDate:
        format: date-time
        type: string
      endDate:
        format: date-time
        type: string
      startHour:
        format: int32
        type: integer
      endHour:
        format: int32
        type: integer
      repeatOn:
        type: string
      expectedConditionsId:
        format: int64
        type: integer
      categoryId:
        format: int64
        type: integer
      roomId:
        format: int64
        type: integer
      expectedConditions:
        $ref: '#/definitions/ExpectedRoomConditionsDto'
      category:
        $ref: '#/definitions/RoomPolicyCategoryDto'