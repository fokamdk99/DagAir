// <auto-generated />
using System;
using DagAir.Policies.Data.AppContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DagAir.Policies.Data.Migrations.Migrations
{
    [DbContext(typeof(DagAirAppContext))]
    [Migration("20211024142142_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DagAir.Policies")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("DagAir.Policies.Data.AppEntities.ExpectedRoomConditions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime")
                        .HasColumnName("created")
                        .HasDefaultValueSql("(CURRENT_DATE)");

                    b.Property<float>("Humidity")
                        .HasColumnType("float")
                        .HasColumnName("humidity");

                    b.Property<float>("HumidityMargin")
                        .HasColumnType("float")
                        .HasColumnName("humidity_margin");

                    b.Property<float>("Illuminance")
                        .HasColumnType("float")
                        .HasColumnName("illuminance");

                    b.Property<float>("IlluminanceMargin")
                        .HasColumnType("float")
                        .HasColumnName("illuminance_margin");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime")
                        .HasColumnName("modified");

                    b.Property<float>("Temperature")
                        .HasColumnType("float")
                        .HasColumnName("temperature");

                    b.Property<float>("TemperatureMargin")
                        .HasColumnType("float")
                        .HasColumnName("temperature_margin");

                    b.HasKey("Id")
                        .HasName("pk_expected_room_conditions");

                    b.ToTable("expected_room_conditions");
                });

            modelBuilder.Entity("DagAir.Policies.Data.AppEntities.RoomPolicy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime")
                        .HasColumnName("created")
                        .HasDefaultValueSql("(CURRENT_DATE)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<long>("ExpectedConditionsId")
                        .HasColumnType("bigint")
                        .HasColumnName("expected_conditions_id");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime")
                        .HasColumnName("modified");

                    b.Property<string>("RepeatOn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("repeat_on");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("pk_room_policies");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_room_policies_category_id");

                    b.HasIndex("ExpectedConditionsId")
                        .IsUnique()
                        .HasDatabaseName("ix_room_policies_expected_conditions_id");

                    b.ToTable("room_policies");
                });

            modelBuilder.Entity("DagAir.Policies.Data.AppEntities.RoomPolicyCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime")
                        .HasColumnName("created")
                        .HasDefaultValueSql("(CURRENT_DATE)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime")
                        .HasColumnName("modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_room_policy_configurations");

                    b.ToTable("room_policy_configurations");
                });

            modelBuilder.Entity("DagAir.Policies.Data.AppEntities.RoomPolicy", b =>
                {
                    b.HasOne("DagAir.Policies.Data.AppEntities.RoomPolicyCategory", "Category")
                        .WithMany("RoomPolicies")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_room_policies_room_policy_configurations_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DagAir.Policies.Data.AppEntities.ExpectedRoomConditions", "ExpectedConditions")
                        .WithOne("RoomPolicy")
                        .HasForeignKey("DagAir.Policies.Data.AppEntities.RoomPolicy", "ExpectedConditionsId")
                        .HasConstraintName("fk_room_policies_expected_room_conditions_expected_conditions_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ExpectedConditions");
                });

            modelBuilder.Entity("DagAir.Policies.Data.AppEntities.ExpectedRoomConditions", b =>
                {
                    b.Navigation("RoomPolicy");
                });

            modelBuilder.Entity("DagAir.Policies.Data.AppEntities.RoomPolicyCategory", b =>
                {
                    b.Navigation("RoomPolicies");
                });
#pragma warning restore 612, 618
        }
    }
}
